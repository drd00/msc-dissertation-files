@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix terms: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dqv: <http://www.w3.org/ns/dqv#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix airo: <https://w3id.org/airo#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

# Example namespace for any new types.
@prefix : <https://example.org/ex#> .

# TODO: reference the dimensions in `datasheets-dcat-dqv.ttl` using valid URIs.

# Use SHACL SPARQL rules everywhere for consistency, even where no 'if/else' logic is required.
:DatasheetShape rdf:type sh:NodeShape ;
    sh:targetClass dcat:Dataset ;

    ################################
    # Has purpose
    ################################
    sh:sparql [
        sh:message "Dataset must have a purpose measurement with a string value"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :PurposeMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Created by
    ################################
    sh:sparql [
        sh:message "Dataset must have a creator property"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    $this terms:creator ?entity .
                }
            }
        """
    ] ;

    ################################
    # Funded by
    ################################
    sh:sparql [
        sh:message "A datasheet must indicate whether funding was received"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :FundingPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Funding presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?fundingMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :FundingPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :FundingDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Comprised of instances - require at minimum human-readable details.
    ################################
    sh:sparql [
        sh:message "There must be at minimum a human-readable description of instance composition."@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceTypesMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Instance counts
    ################################
    sh:sparql [
        sh:message "There must be counts for the number of instances in the dataset"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceCountMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:nonNegativeInteger)
                }
            }
        """
    ] ;

    ################################
    # Instances subset or all
    ################################
    sh:sparql [
        sh:message "There must be information pertaining to whether the dataset is complete or a sample (from a larger dataset)"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SamplingMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Sampling metric"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :SamplingMetric ;
                    dqv:value false .
                
                FILTER NOT EXISTS {
                    ?representativenessMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RepresentativenessMetric ;
                        dqv:value ?repValue .
                    FILTER(datatype(?repValue) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?samplingMethodMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SamplingMethodMetric ;
                        dqv:value ?methodValue .
                    FILTER(datatype(?methodValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Each instance consists of
    ################################
    sh:sparql [
        sh:message "Each instance consists of"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceCompositionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Feature description metric"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :FeatureDescriptionMetric;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }

        """
    ] ;

    ################################
    # Label or target
    ################################
    sh:sparql [
        sh:message "Label or target"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :LabelPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }

        """
    ] ;
    sh:sparql [
        sh:message "Label description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :LabelPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :LabelDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Missing information
    ################################
    sh:sparql [
        sh:message "Missing information presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :MissingInfoPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Missing info description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :MissingInfoPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :MissingInfoDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Relationships made explicit
    ################################
    sh:sparql [
        sh:message "Relationships made explicit presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RelationshipPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Relationship description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :RelationshipPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RelationshipDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Data splits
    ################################
    sh:sparql [
        sh:message "Data splits presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataSplitPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Data splits description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :DataSplitPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataSplitDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Errors, noise, redundancies
    ################################
    sh:sparql [
        sh:message "Data issues presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataIssuesPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Data issues description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :DataIssuesPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataIssuesDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # External resources
    ################################
    sh:sparql [
        sh:message "External resources presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ExternalResourcesMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "External resources other"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ExternalResourcesMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ExternalResourcesDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?guaranteesMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ResourceGuaranteesMetric ;
                        dqv:value ?guaranteesValue .
                    FILTER(datatype(?guaranteesValue) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?archivalMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ArchivalVersionsMetric ;
                        dqv:value ?archivalValue .
                    FILTER(datatype(?archivalValue) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?restrictionsMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ExternalRestrictionsMetric ;
                        dqv:value ?restrictionsValue .
                    FILTER(datatype(?restrictionsValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Confidental data
    ################################
    sh:sparql [
        sh:message "Confidential data presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ConfidentialDataPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Confidential data description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ConfidentialDataPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ConfidentialDataDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Offensive data
    ################################
    sh:sparql [
        sh:message "Anxiety-causing data presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AnxietyContentPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Anxiety-causing data description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AnxietyContentPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AnxietyContentDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Subpopulations
    ################################
    sh:sparql [
        sh:message "Subpopulations presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SubpopulationPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Subpopulations description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :SubpopulationPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SubpopulationDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Identifiable individuals
    ################################
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :IndividualIdentificationPossibilityMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :IndividualIdentificationPossibilityMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :IndividualIdentificationDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Sensitive data
    ################################
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SensitiveDataPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :SensitiveDataPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SensitiveDataDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Instance data acquisition
    ################################
    sh:sparql [
        sh:message "Instance data acquisition presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceAcquisitionMetric ;
                        dqv:value ?value .
                    ?value rdf:type :InstanceAcquisitionMeans .
                }
            }
        """
    ] ;
    sh:rule [
        sh:if [
            sh:sparql [
                sh:prefixes [
                    sh:declare [
                        sh:prefix "rdf" ;
                        sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
                    ] ;
                    sh:declare [
                        sh:prefix "" ;
                        sh:namespace "https://example.org/ex#"^^xsd:anyURI
                    ] ;
                    sh:declare [
                        sh:prefix "dqv" ;
                        sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
                    ] ;
                    sh:declare [
                        sh:prefix "xsd" ;
                        sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
                    ] ;
                    sh:declare [
                        sh:prefix "terms" ;
                        sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
                    ]
                ] ;
                sh:select """
                    SELECT $this
                    WHERE {
                        FILTER NOT EXISTS {
                            ?measurement dqv:computedOn $this ;
                                rdf:type dqv:QualityMeasurement ;
                                dqv:isMeasurementOf :InstanceAcquisitionMetric ;
                                dqv:value ?value .
                            ?value rdf:type :InstanceAcquisitionMeans .
                        }
                    }
                """
            ]
        ] ;
        sh:then [

        ]
    ] ;
    sh:sparql [
        sh:message "Instance acquisition description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :InstanceAcquisitionMetric ;
                    dqv:value ?acquisitionValue .
                FILTER(?acquisitionValue IN (:IndirectInferenceDerived , :SubjectReported))

                FILTER NOT EXISTS {
                    ?verificationMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceAcquisitionVerificationPresenceMetric ;
                        dqv:value ?verifValue .
                    FILTER(?datatype(?verifValue) = xsd:boolean)
                }

                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceAcquisitionVerificationDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] .



