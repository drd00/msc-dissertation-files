@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix terms: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dqv: <http://www.w3.org/ns/dqv#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix airo: <https://w3id.org/airo#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

# Example namespace for any new types.
@prefix : <https://example.org/ex#> .

# Use SHACL SPARQL rules everywhere for consistency, even where no 'if/else' logic is required.
:DatasheetShape rdf:type sh:NodeShape ;
    sh:targetClass dcat:Dataset ;

    ################################
    # Has purpose
    ################################
    sh:sparql [
        sh:message "Dataset must have a purpose measurement with a string value"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :PurposeMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Created by
    ################################
    sh:sparql [
        sh:message "Dataset must have a creator property"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    $this terms:creator ?entity .
                }
            }
        """
    ] ;

    ################################
    # Funded by
    ################################
    sh:sparql [
        sh:message "A datasheet must indicate whether funding was received"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :FundingPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Funding presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?fundingMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :FundingPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :FundingDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Comprised of instances - require at minimum human-readable details.
    ################################
    sh:sparql [
        sh:message "There must be at minimum a human-readable description of instance composition."@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceTypesMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Instance counts
    ################################
    sh:sparql [
        sh:message "There must be counts for the number of instances in the dataset"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceCountMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:nonNegativeInteger)
                }
            }
        """
    ] ;

    ################################
    # Instances subset or all
    ################################
    sh:sparql [
        sh:message "There must be information pertaining to whether the dataset is complete or a sample (from a larger dataset)"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SamplingMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Sampling metric"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :SamplingMetric ;
                    dqv:value false .
                
                FILTER NOT EXISTS {
                    ?representativenessMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RepresentativenessMetric ;
                        dqv:value ?repValue .
                    FILTER(datatype(?repValue) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?samplingMethodMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SamplingMethodMetric ;
                        dqv:value ?methodValue .
                    FILTER(datatype(?methodValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Each instance consists of
    ################################
    sh:sparql [
        sh:message "Each instance consists of"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceCompositionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Feature description metric"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :FeatureDescriptionMetric;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }

        """
    ] ;

    ################################
    # Label or target
    ################################
    sh:sparql [
        sh:message "Label or target"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :LabelPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }

        """
    ] ;
    sh:sparql [
        sh:message "Label description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :LabelPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :LabelDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Missing information
    ################################
    sh:sparql [
        sh:message "Missing information presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :MissingInfoPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Missing info description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :MissingInfoPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :MissingInfoDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Relationships made explicit
    ################################
    sh:sparql [
        sh:message "Relationships made explicit presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RelationshipPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Relationship description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :RelationshipPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RelationshipDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Data splits
    ################################
    sh:sparql [
        sh:message "Data splits presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataSplitPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Data splits description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :DataSplitPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataSplitDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Errors, noise, redundancies
    ################################
    sh:sparql [
        sh:message "Data issues presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataIssuesPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Data issues description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :DataIssuesPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataIssuesDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # External resources
    ################################
    sh:sparql [
        sh:message "External resources presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ExternalResourcesMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "External resources other"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ExternalResourcesMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ExternalResourcesDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?guaranteesMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ResourceGuaranteesMetric ;
                        dqv:value ?guaranteesValue .
                    FILTER(datatype(?guaranteesValue) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?archivalMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ArchivalVersionsMetric ;
                        dqv:value ?archivalValue .
                    FILTER(datatype(?archivalValue) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?restrictionsMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ExternalRestrictionsMetric ;
                        dqv:value ?restrictionsValue .
                    FILTER(datatype(?restrictionsValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Confidental data
    ################################
    sh:sparql [
        sh:message "Confidential data presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ConfidentialDataPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Confidential data description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ConfidentialDataPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ConfidentialDataDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Offensive data
    ################################
    sh:sparql [
        sh:message "Anxiety-causing data presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AnxietyContentPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Anxiety-causing data description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AnxietyContentPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AnxietyContentDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Subpopulations
    ################################
    sh:sparql [
        sh:message "Subpopulations presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SubpopulationPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Subpopulations description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :SubpopulationPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SubpopulationDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Identifiable individuals
    ################################
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :IndividualIdentificationPossibilityMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :IndividualIdentificationPossibilityMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :IndividualIdentificationDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Sensitive data
    ################################
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SensitiveDataPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :SensitiveDataPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SensitiveDataDescriptionMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Instance data acquisition
    ################################
    sh:sparql [
        sh:message "Instance data acquisition presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceAcquisitionMetric ;
                        dqv:value ?value .
                    ?value rdf:type :InstanceAcquisitionMeans .
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Instance acquisition means"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :InstanceAcquisitionMetric ;
                    dqv:value ?acquisitionValue .
                FILTER(?acquisitionValue IN (:IndirectInferenceDerived , :SubjectReported))

                FILTER NOT EXISTS {
                    ?verificationMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceAcquisitionVerificationPresenceMetric ;
                        dqv:value ?value .
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Instance acquisition means verification / description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :InstanceAcquisitionMetric ;
                    dqv:value ?acquisitionValue .
                FILTER(?acquisitionValue IN (:IndirectInferenceDerived , :SubjectReported))

                ?verificationMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :InstanceAcquisitionVerificationPresenceMetric ;
                    dqv:value true .

                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceAcquisitionVerificationDescriptionMetric ;
                        dqv:value ?descriptionValue .
                    FILTER(datatype(?descriptionValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Data acquisition mechanisms
    ################################
    sh:sparql [
        sh:message "Data acquisition mechanisms"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataAcquisitionMechanismMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Data acquisition mechanism validation presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataAcquisitionMechanismValidationPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Data acquisition mechanism validation description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?fundingMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :DataAcquisitionMechanismValidationPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataAcquisitionMechanismValidationDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Collection duration
    ################################
    sh:sparql [
        sh:message "Collection duration"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DatespanMetric ;
                        dqv:value ?value .
                    ?value rdf:type terms:PeriodOfTime .
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Datespan matches instance presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DatespanMatchesInstanceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Datespan matches instance description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "terms" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?datespanMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :DatespanMatchesInstanceMetric ;
                    dqv:value false .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceDateDescriptionMetric ;
                        dqv:value ?descValue .
                    ?descValue rdf:type terms:PeriodOfTime .
                }
            }
        """
    ] ;

    ################################
    # Ethical review
    ################################
    sh:sparql [
        sh:message "Ethical review presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :EthicalReviewPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Ethical review description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :EthicalReviewPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :EthicalReviewDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Third-party
    ################################
    sh:sparql [
        sh:message "Third party"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ThirdPartyMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;

    ################################
    # Provided notification
    ################################
    sh:sparql [
        sh:message "Provided notification presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ProvidedNotificationPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Provided notification description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ProvidedNotificationPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ProvidedNotificationDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Consent obtained
    ################################
    sh:sparql [
        sh:message "Consent obtained presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ConsentObtainedPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Consent obtained description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ConsentObtainedPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ConsentObtainedDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Consent revokation mechanism
    ################################
    sh:sparql [
        sh:message "Consent revokation mechanism presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ConsentRevokationPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Consent revokation description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ConsentRevokationPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ConsentRevokationDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Impact analysis
    ################################
    sh:sparql [
        sh:message "Impact analysis presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ImpactAnalysisPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Impact analysis description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ImpactAnalysisPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ImpactAnalysisDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Preprocessing data
    ################################
    sh:sparql [
        sh:message "Preprocessing data presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :PreprocessingDataPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Preprocessing data description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :PreprocessingDataPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descriptionMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :PreprocessingDataDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :PreprocessingDataPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;

    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :PreprocessingDataPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :PreprocessingDataDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :PreprocessingDataPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?rawDataMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RawDataSavedPresenceMetric ;
                        dqv:value ?rawDataValue .
                    FILTER(datatype(?rawDataValue) = xsd:boolean)
                }
            }
        """
    ] ;

    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :PreprocessingDataPresenceMetric ;
                    dqv:value true .
                
                ?rawDataMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :RawDataSavedPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?accessPointMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RawDataSavedAccessPointMetric ;
                        dqv:value ?accessPointValue .
                    FILTER(datatype(?accessPointValue) = xsd:anyURI)
                }
            }
        """
    ] ;

    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :PreprocessingDataPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?softwareMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SoftwareAvailablePresenceMetric ;
                        dqv:value ?softwareValue .
                    FILTER(datatype(?softwareValue) = xsd:boolean)
                }
            }
        """
    ] ;

    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :PreprocessingDataPresenceMetric ;
                    dqv:value true .
                
                ?softwareMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :SoftwareAvailablePresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?softwareAccessPointMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :SoftwareAvailableAccessPointMetric ;
                        dqv:value ?softwareAccessPointValue .
                    FILTER(datatype(?softwareAccessPointValue) = xsd:anyURI)
                }
            }
        """
    ] ;

    ################################
    # Tasks used for
    ################################
    sh:sparql [
        sh:message "Tasks used for presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :TasksUsedForPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Tasks used for description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :TasksUsedForPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :TasksUsedForDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Links to papers or systems
    ################################
    sh:sparql [
        sh:message "Links to papers or systems presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RepositoryLinksPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Links to papers or systems access point"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :RepositoryLinksPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?apMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :RepositoryLinksAccessPointMetric ;
                        dqv:value ?apValue .
                    FILTER(datatype(?apValue) = xsd:anyURI)
                }
            }
        """
    ] ;

    ################################
    # Other possible tasks
    ################################
    sh:sparql [
        sh:message "Other possible tasks presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :OtherPossibleTasksPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Other possible tasks description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :OtherPossibleTasksPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :OtherPossibleTasksDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Data composition, collection / processing impact
    ################################
    sh:sparql [
        sh:message "Data composition, collection / processing impact; presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :CompositionCollectionProcessingFutureImpactPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Data composition, collection / processing impact; description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :CompositionCollectionProcessingFutureImpactPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :CompositionCollectionProcessingFutureImpactDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Not other tasks
    ################################
    sh:sparql [
        sh:message "Not other tasks, presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :NotToBeUsedForTaskPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Not other tasks, description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :NotToBeUsedForTaskPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :NotToBeUsedForTaskDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Third-party distribution
    ################################
    sh:sparql [
        sh:message "Third party distribution presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ThirdPartyDistributionPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Third party distribution description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ThirdPartyDistributionPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ThirdPartyDistributionDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Distribution means
    ################################
    sh:sparql [
        sh:message "Distribution means"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DistributionMeansMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:string)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Has DOI"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :hasDOIMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message ""@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :hasDOIMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?doiMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DOIMetric ;
                        dqv:value ?doiValue .
                    FILTER(datatype(?doiValue) = xsd:anyURI)
                }
            }
        """
    ] ;

    ################################
    # Distribution date
    ################################
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DistributionDateMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:date)
                }
            }
        """
    ] ;

    ################################
    # License
    ################################
    sh:sparql [
        sh:message "License presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :LicensePresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "License description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :LicensePresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :LicenseDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Restrictions on instance data
    ################################
    sh:sparql [
        sh:message "Instance data restrictions presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceDataRestrictionPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Instance data restrictions description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :InstanceDataRestrictionPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :InstanceDataRestrictionDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Export controls / regulatory restrictions
    ################################
    sh:sparql [
        sh:message "Export controls / regulatory restrictions presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ExportControlRegulatoryRestrictionPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Export controls / regulatory restrictions descriptions"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ExportControlRegulatoryRestrictionPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ExportControlRegulatoryRestrictionDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Dataset maintainer
    ################################
    sh:sparql [
        sh:message "Dataset maintainer"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "vcard" ;
                sh:namespace "http://www.w3.org/2006/vcard/ns#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    $this :maintainer ?m .
                    ?m rdf:type ?type .
                    FILTER(?type IN (vcard:Kind, vcard:Individual, vcard:Organization, vcard:Group))
                }
            }
        """
    ] ;

    ################################
    # Manager contact means
    ################################
    sh:sparql [
        sh:message "Manager contact means"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "vcard" ;
                sh:namespace "http://www.w3.org/2006/vcard/ns#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    $this :managerContact ?m .
                    ?m rdf:type ?type .
                    FILTER(?type IN (vcard:Kind, vcard:Individual, vcard:Organization, vcard:Group))
                }
            }
        """
    ] ;

    ################################
    # Erratum
    ################################
    sh:sparql [
        sh:message "Erratum presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ErratumPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Erratum description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :ErratumPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :ErratumDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Update details
    ################################
    sh:sparql [
        sh:message "Update presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :UpdatePresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Update description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :UpdatePresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?freqMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :UpdateFrequencyMetric ;
                        dqv:value ?freqValue .
                    FILTER(datatype(?freqValue) = xsd:string)
                }

                FILTER NOT EXISTS {
                    ?updaterMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :UpdaterMetric ;
                        dqv:value ?updaterValue .
                    FILTER(datatype(?updaterValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Data retention limits
    ################################
    sh:sparql [
        sh:message "Data retention limit presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataRetentionPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Data retention limit description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :DataRetentionPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :DataRetentionDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Legacy support
    ################################
    sh:sparql [
        sh:message "Legacy support presence"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :LegacySupportPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:message "Legacy support description"@en ;
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :LegacySupportPresenceMetric ;
                    dqv:value ?value .
                FILTER(datatype(?value) = xsd:boolean)
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :LegacySupportDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;

    ################################
    # Augmentation mechanism
    ################################
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                FILTER NOT EXISTS {
                    ?measurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AugmentationPossibilityPresenceMetric ;
                        dqv:value ?value .
                    FILTER(datatype(?value) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AugmentationPossibilityPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?descMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AugmentationPossibilityDescriptionMetric ;
                        dqv:value ?descValue .
                    FILTER(datatype(?descValue) = xsd:string)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AugmentationPossibilityPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?validationMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AugmentationValidationPresenceMetric ;
                        dqv:value ?validationValue .
                    FILTER(datatype(?validationValue) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AugmentationPossibilityPresenceMetric ;
                    dqv:value true .
                
                ?validationMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AugmentationValidationPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?validationDescMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AugmentationValidationDescriptionMetric ;
                        dqv:value ?validationDescValue .
                    FILTER(datatype(?validationDescValue) = xsd:string)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AugmentationPossibilityPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?commMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AugmentationCommunicationPresenceMetric ;
                        dqv:value ?commValue .
                    FILTER(datatype(?commValue) = xsd:boolean)
                }
            }
        """
    ] ;
    sh:sparql [
        sh:prefixes [
            sh:declare [
                sh:prefix "rdf" ;
                sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "" ;
                sh:namespace "https://example.org/ex#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "dqv" ;
                sh:namespace "http://www.w3.org/ns/dqv#"^^xsd:anyURI
            ] ;
            sh:declare [
                sh:prefix "xsd" ;
                sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                ?measurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AugmentationPossibilityPresenceMetric ;
                    dqv:value true .
                
                ?commMeasurement dqv:computedOn $this ;
                    rdf:type dqv:QualityMeasurement ;
                    dqv:isMeasurementOf :AugmentationCommunicationPresenceMetric ;
                    dqv:value true .
                
                FILTER NOT EXISTS {
                    ?commDescMeasurement dqv:computedOn $this ;
                        rdf:type dqv:QualityMeasurement ;
                        dqv:isMeasurementOf :AugmentationCommunicationDescriptionMetric ;
                        dqv:value ?commDescValue .
                    FILTER(datatype(?commDescValue) = xsd:string)
                }
            }
        """
    ] .
